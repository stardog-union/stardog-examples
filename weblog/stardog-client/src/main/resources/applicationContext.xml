<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
    Bean to make sure that the testDB is created. This is done so that the DataSourceFactoryBean doesn't
    fail when attempting to work with a disk db that hasn't been created.
    -->
    <bean name="stardogAdmin" class="com.stardog.examples.StardogAdmin">
        <property name="to" value="testDB"/>
        <property name="url" value="http://localhost:5820"/>
        <property name="supplier" ref="supplierFunc" />
    </bean>

    <bean id="supplierFunc" class="com.stardog.examples.CCSupplier" factory-method="getSupplier" />

    <bean name="dataSource" class="com.complexible.stardog.ext.spring.DataSourceFactoryBean">
        <property name="to" value="testDB"/>
        <property name="supplier" ref="supplierFunc" />
        <property name="reasoningType" value="true" />
        <property name="url" value="http://localhost:5820"/>
    </bean>

    <bean name="template" class="com.complexible.stardog.ext.spring.SnarlTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean name="importer" class="com.complexible.stardog.ext.spring.DataImporter">
        <property name="snarlTemplate" ref="template"/>
        <property name="format">
            <util:constant static-field="com.stardog.stark.io.RDFFormats.N3"/>
        </property>
        <property name="inputFiles">
            <list>
                <value>classpath:foaf.rdf</value>
                <value>classpath:marvel.rdf</value>
                <value>classpath:marvel_v2.rdf</value>
            </list>
        </property>
    </bean>

</beans>
